@mixin circle-icon($size, $bg: null){
    border-radius: 50%;
    width: $size;
    height: $size;
    background: $bg;
}

@mixin hidden{
    display: none;
}

@mixin icon($icon, $colour: null, $fsize: null){
    &::before{
        content: $icon;
        color: $colour;
        font-size: $fsize;
        @content;
    }
}

@mixin no-border{
    border: none;
}

@mixin base-transition{
    transition: .5s ease;
}

@mixin hamburger-slice{
    width: 33px;
    height: 4px;
    position: absolute;
    background-color: $white;
    display: block;
}

@mixin abs-pos($t: null, $r: null, $b: null, $l: null){
    position: absolute;
    top: $t;
    right: $r;
    bottom: $b;
    left: $l;
}

@mixin fixed-pos($t: null, $r: null, $b: null, $l: null){
    position: fixed;
    top: $t;
    right: $r;
    bottom: $b;
    left: $l;
}

@mixin base-font{
    font-family: $stack-poppins;
}

@mixin mq($brk){
    $value: map-get($break-points, $brk);
    @media screen and (min-width: $value) {
        &{
            @content;
        }
    }
}

@mixin mq-max($brk){
    $value: map-get($break-points, $brk);
    @media screen and (max-width: $value) {
        &{
            @content;
        }
    }
}

@mixin mq-range($l-brk, $u-brk){
    $lb: map-get($break-points, $l-brk);
    $ub: map-get($break-points, $u-brk);
    @media screen and (min-width: $lb) and (max-width: ($ub - 1)) {
        &{
            @content;
        }
    }
}

@mixin hide-at-viewport($brk, $disp: block){
    display: $disp;

    @include mq($brk){
        display: none;
    }
}

@mixin show-at-viewport($brk, $disp: block){
    display: none;

    @include mq($brk){
        display: $disp;
    }
}

@mixin mx($value){
    margin-right: $value;
    margin-left: $value;
}

@mixin my($value){
    margin-top: $value;
    margin-bottom: $value;
}

@mixin px($value){
    padding-right: $value;
    padding-left: $value;
}

@mixin py($value){
    padding-top: $value;
    padding-bottom: $value;
}

@mixin flex-columns($n, $gap: 0px){
    flex: 1 calc((100% - #{$gap} * (#{$n} - 1)) / #{$n});
}

@mixin center{
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin services-carousel($service, $h: 550px){
    padding: 0;
    min-height: 550px;
    position: relative;
    @include center;

    background-color: rgba($colour-carousel-bg, 0.5);
    background-image: url(#{$img-path-local}/backgrounds/#{$service}.webp);
    background-blend-mode: multiply;

    background-size: cover;
    background-position: center;
    h1{
        margin-bottom: 1.25rem;
    }
    p{
        margin-bottom: .375rem + 1.938rem;
    }
    a{
        margin-bottom: 1.125rem;
    }

    @include mq("lg"){
        background-color: $colour-carousel-bg;
        background: url('#{$img-path-local}/backgrounds/#{$service}.webp');
        background-size: cover;
        background-position: center;

        &::before{
            content: "";
            z-index: 0;
            @include abs-pos(0,0,0,0);
            background: linear-gradient(270deg,transparent 25%,$colour-carousel-bg);
            background-size: cover;
            background-position: center;
        }
    }
}